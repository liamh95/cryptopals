#SBox = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
#0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
#0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
#0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07]


def xtime(inByte):
	ret = inByte
	ret <<= 1
	if ret>=256:
		ret ^= 283
	return ret

def F256mult(byte1, byte2):
	temp1=byte1
	temp2=byte2
	ret = 0
	while temp2>0:
		if temp2%2==1:
			ret ^= temp1
		temp1 = xtime(temp1)
		temp2 >>= 1
	return ret

def polyMult(a, b):
	d0 = F256mult(a[0], b[0])^F256mult(a[3],b[1])^F256mult(a[2], b[2])^F256mult(a[1],b[3])
	d1 = F256mult(a[1], b[0])^F256mult(a[0],b[1])^F256mult(a[3], b[2])^F256mult(a[2],b[3])
	d2 = F256mult(a[2], b[0])^F256mult(a[1],b[1])^F256mult(a[0], b[2])^F256mult(a[3],b[3])
	d3 = F256mult(a[3], b[0])^F256mult(a[2],b[1])^F256mult(a[1], b[2])^F256mult(a[0],b[3])
	return [d0, d1, d2, d3]

ans = hex(F256mult(0x57,0x13))
print ans